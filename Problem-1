# T.C = m * n  S.C = m * n
# check if to use the coin or not and whatever value is minimum has to be selected
class Solution(object):
    def coinChange(self, coins, amount):
        """
        :type coins: List[int]
        :type amount: int
        :rtype: int
        """
        m = len(coins)
        n = amount
        dp = [[0 for _ in range(n+1)] for _ in range(m+1)]

        for i in range(1,n+1):
            dp[0][i] = 999999

        for i in range(1,m+1):
            for j in range(1,n+1):
                if(j<coins[i-1]):
                    dp[i][j] = dp[i-1][j]
                else:
                    dp[i][j] = min(dp[i-1][j],dp[i][j-coins[i-1]]+1)
        print(dp[m][n])
        if dp[m][n] > amount: return -1
        return dp[m][n]
        