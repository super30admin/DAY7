//time complexity: O(2^n)
//space complexity: O(1)
//brute force, for every index => we go top down for every index i we check amount at i-1 and amount at i-2
class Solution {

public int rob(int[] nums) {
    return rob(nums, nums.length-1);
}
private int rob(int[] nums, int i) {
    if (i < 0) {
        return 0;
    }
    return Math.max(rob(nums, i - 2) + nums[i], rob(nums, i - 1));
 }
}
