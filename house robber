// Time Complexity : O(n)
// Space Complexity : O(n)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : no


// Your code here along with comments explaining your approach

class Solution {
    public int rob(int[] nums) {
        if(nums == null || nums.length == 0) return 0;
        int [] temp = new int[nums.length + 1];
        for(int i = 0; i < nums.length; i++){
            if(i == 0){
                temp[0] = nums[i];
            }
            else if(i == 1){
                 temp[1] = Math.max(nums[i], temp[i-1]);
            }
            else {
                temp[i] = Math.max(temp[i-1],nums[i] + temp[i-2]);
            }
        }
        for(int j = 0; j < temp.length; j++){
            System.out.println(temp[j]);
        }
        return temp[temp.length - 2];
    }
}