class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        #using DP
        m = len(coins)
        n = amount
        dp = [[None for i in range(n+1)] for j in range(m+1)] # +1 is for the dummy row
        for i in range(len(coins)+1):
            dp[i][0] = 0
    
        #fill the top row
        for j in range(1, len(dp[0])):
            dp[0][j] = amount + 1 
        
        for i in range(1, len(dp)):
            for j in range(1, len(dp[0])):
                #till denomination of coin > amount
                if(coins[i-1]>j):
                    #zero case - above
                    dp[i][j] = dp[i-1][j]
                else:
                    dp[i][j] = min(dp[i-1][j],dp[i][j-coins[i-1]]+1)
        
        result = dp[-1][-1]
        
        if result > amount:
            return -1
        
        return dp[-1][-1]
                       