// Time Complexity : O(N)
// Space Complexity : O(N) ??
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : Tabulation Method.


// Your code here along with comments explaining your approach :  Idea is to use tabulation method and not memoization as we just need the result from PREVIOUS STEP at each stage.
SOLUTION:

class Solution {
    public int rob(int[] nums) {
        if(nums==null || nums.length==0){
            return 0;
        }
        
        int selected = nums[0];
        int notSelected = 0;
        
        for(int i = 1 ; i < nums.length ; i++){
            int temp = Math.max(selected, notSelected);
            selected =  notSelected + nums[i];
            notSelected = temp;
        }
        
       return Math.max(selected, notSelected);
    }
 //    RECURSIVE APPROACH - TLE
//     private int helper(int[] nums, int index, int Max){
//         //base
//         if(index>=nums.length){
//             return Max;
//         }
        
//         //logic
//         int case1 = helper(nums,index + 2, Max+nums[index]); //selected
//         int case2 = helper(nums,index+1, Max);   //notSelected
        
//         return Math.max(case1, case2);
        
//     }
}
