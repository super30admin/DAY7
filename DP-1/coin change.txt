// time complexity = O(amount * coins_length)
// space complexity =O(amount * coins_length)

class Solution {
    public int coinChange(int[] coins, int amount) 
    {
        int[][] a = new int[coins.length+1][amount+1];
        for(int i=0;i<=coins.length;i++)
            a[i][0]=0;
        for(int i=1;i<a[0].length;i++)
            a[0][i]=9999;
        for(int i=1;i<=coins.length;i++)
        {
            for(int j=1;j<a[0].length;j++)
            {
                if(j<coins[i-1])
                {
                    a[i][j]=a[i-1][j];
                }
                else
                {
                    a[i][j]=Math.min(a[i-1][j],a[i][j-coins[i-1]]+1);
                }
            }
        }
        if(a[coins.length][amount]>=9999) return -1;
        return a[coins.length][amount];
    }
}