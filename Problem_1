class Solution {
    int [][] dp;
    public int coinChange(int[] coins, int amount) {
        dp = new int[coins.length][amount+1];
        int a = coinChange(coins,0,amount);
        return a == Integer.MAX_VALUE ? -1 : a;
    }
    int coinChange(int[] coins, int index, int amount){
        if(amount==0){
            return 0;
        }
        if(amount < 0 || index == coins.length) {
            return Integer.MAX_VALUE;
        }
        if(dp[index][amount]==0){
            int select = coinChange(coins, index, amount-coins[index]);
            if(select !=Integer.MAX_VALUE) {
                select +=1;
            }
           int notselect = coinChange(coins, index+1, amount); 
            dp[index][amount] = Math.min(select,notselect);
        }
        return dp[index][amount];
    }
}
