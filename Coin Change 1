// Time Complexity : O(m*n)
// Space Complexity : O(m*n)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this :


class Solution(object):
    def coinChange(self, coins, amount):
        """
        :type coins: List[int]
        :type amount: int
        :rtype: int
        """
        if(len(coins)==0):
            return -1
        dp=[[0 for x in range(amount+1)] for y in range(len(coins)+1)]
        dp[0][0]=0
        #top row
        for j in range (1,len(dp[0])):
            dp[0][j]=amount+1
        for i in range(1,len(dp)):
            for j in range(1,len(dp[0])):
                if j<coins[i-1]:
                    dp[i][j]=dp[i-1][j]
                else:
                    dp[i][j]=min(dp[i-1][j],1+dp[i][j-coins[i-1]])
        
        result=dp[len(dp)-1][len(dp[0])-1]
        if(result>amount):
            return -1
        return result
