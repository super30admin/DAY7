class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        #Time Complexity: O(amount * coins.length) 
        #Space Complexity: O(amount)
        
        min_coins = [float('inf')] * (amount + 1)
        min_coins[0] = 0
        
        for i in range(1, len(min_coins)):
            for c in range(len(coins)):
                if coins[c] <= i and min_coins[i - coins[c]] + 1 < min_coins[i]:
                    min_coins[i] = min_coins[i - coins[c]] + 1
        
        return -1 if min_coins[-1] == float('inf') else min_coins[-1]