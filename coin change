#Time complexity: O(n*c) where n is amount and c is length of coins list
#Space complexity : O(n)
#did it run on leetcode: yes
class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        dp = [float(inf)]*(amount+1)
        dp[0] = 0
        for i in range(1, amount+1):
            for j in coins:
                t = i-j
                if t >= 0:
                    dp[i] = min(dp[i], 1+dp[t])
        if dp[-1]==float(inf) : return -1
        return dp[-1]
