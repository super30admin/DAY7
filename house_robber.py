# -*- coding: utf-8 -*-
"""House Robber.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18SEnLRHrMnUtM_pbcm_y75LLoMatnC5f
"""

#time complexity: o(n) 
#space complexity: o(1)

class Solution:
    def rob(self, nums: List[int]) -> int:
        if(nums is None or len(nums)==0): return 0
        
        #dp = [0*2]*n
        skip,take,temp = 0,nums[0],0
        
        #we have temp variable to remember skip for the next take
        for i in range(1,len(nums)):
            temp = skip
            skip = max(skip,take)
            take = temp + nums[i]
            
        return max(skip,take)